---
title: "Data Download"
author: "Matthew Hoctor, PharmD"
date: last-modified

quarto::html_document:
  theme: cerulean
  highlight: github
  
toc: true
toc-depth: 4
toc-location: left
toc-title: Contents
  
code-fold: show
code-overflow: wrap
code-tools: true
code-link: true

editor: source
---

```{r setup, include = FALSE}
# load libraries:
library(tidyverse)
library(data.table)
library(httr2)
library(fst)

# the following lines allow linux bash commands to be run in the code chunks:
# knitr::opts_chunk$set(engine.opts)
```

# Project Overview

This project looks to understand the impact of the Comprehensive Addiction and Recovery Act (CARA) of 2016 on patterns of buprenorphine prescribing practices by examining openly available medicare part D data.  

# Datasets

This code will download the relevant datasets as .csv files (downloaded to a `data` folder not synched to github as these files are quite large) and write them to [fst files](http://www.fstpackage.org/) for fast loading.  R code using `download.file` failed due to large file size, thus a BASH script using `curl` is used instead.  This analysis does not require individual-patient-level data, and thus does not require the Research Identifiable Files (RIFs) or Limited Data Set (LDS) files; non-identifiable files will be used instead.

Datasets include:

 - [Medicare Part D Prescribers - by Provider and Drug ](https://data.cms.gov/provider-summary-by-type-of-service/medicare-part-d-prescribers/medicare-part-d-prescribers-by-provider-and-drug); [data dict](https://data.cms.gov/resources/medicare-part-d-prescribers-by-provider-and-drug-data-dictionary); [data.gov](https://catalog.data.gov/dataset/medicare-part-d-prescribers-by-provider-and-drug-ad73e); the main dataset which includes all prescribed drugs for each provider
 - [Medicare Part D Prescribers - by Geography and Drug ](https://data.cms.gov/provider-summary-by-type-of-service/medicare-part-d-prescribers/medicare-part-d-prescribers-by-geography-and-drug); [data dict](https://data.cms.gov/resources/medicare-part-d-prescribers-by-geography-and-drug-data-dictionary);  [data.gov](https://catalog.data.gov/dataset/medicare-part-d-prescribers-by-geography-and-drug-67fb0); this is essentially the above dataset aggregated by FIPS code, and thus has fewer suppressed values
 - [Medicare Physician & Other Practitioners - by Provider and Service ](https://data.cms.gov/provider-summary-by-type-of-service/medicare-physician-other-practitioners/medicare-physician-other-practitioners-by-provider-and-service); [data dict](https://data.cms.gov/resources/medicare-physician-other-practitioners-by-provider-and-service-data-dictionary); [data.gov](https://catalog.data.gov/dataset/medicare-physician-other-practitioners-by-provider-and-service-b156e); includes data on services rendered

It may be interesting to look at:

 - [Medicare Part D Prescribers - by Provider](https://data.cms.gov/provider-summary-by-type-of-service/medicare-part-d-prescribers/medicare-part-d-prescribers-by-provider); includes other provider-specific data, such as [RUCA codes](https://www.ers.usda.gov/data-products/rural-urban-commuting-area-codes.aspx)

# Data Download

## Medicare Part D Prescribers - by Geography and Drug

Going through each year from 2021-2013 we will check if the file exists in the `data` folder, and if not, download it using R.  The download URLs for this dataset are:

https://data.cms.gov/sites/default/files/2023-04/3d3ebd5b-b4bf-45b4-876d-afa7916d1b72/MUP_DPR_RY23_P04_V10_DY21_Geo.csv
https://data.cms.gov/sites/default/files/2022-07/ca71b7df-4d48-4c2d-aded-2ca22285739c/MUP_DPR_RY22_P04_V10_DY20_Geo.csv
https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY19_Geo.csv
https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY18_Geo.csv
https://data.cms.gov/sites/default/files/2022-01/MUP_PTD_R19_P16_V10_D17_Geo.csv
https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY16_Geo_0.csv
https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY15_Geo_0.csv
https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY14_Geo_0.csv
https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY13_Geo_0.csv

```{r}
if(!file.exists("data/geo/2021.csv")){
  download.file("https://data.cms.gov/sites/default/files/2023-04/3d3ebd5b-b4bf-45b4-876d-afa7916d1b72/MUP_DPR_RY23_P04_V10_DY21_Geo.csv", 
                method = "libcurl",
                destfile = "data/geo/2021.csv")
}
if(!file.exists("data/geo/2020.csv")){
  download.file("https://data.cms.gov/sites/default/files/2022-07/ca71b7df-4d48-4c2d-aded-2ca22285739c/MUP_DPR_RY22_P04_V10_DY20_Geo.csv", 
                method = "libcurl",
                destfile = "data/geo/2020.csv")
}
if(!file.exists("data/geo/2019.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY19_Geo.csv", 
                method = "libcurl",
                destfile = "data/geo/2019.csv")
}
if(!file.exists("data/geo/2018.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY18_Geo.csv", 
                method = "libcurl",
                destfile = "data/geo/2018.csv")
}
if(!file.exists("data/geo/2017.csv")){
  download.file("https://data.cms.gov/sites/default/files/2022-01/MUP_PTD_R19_P16_V10_D17_Geo.csv", 
                method = "libcurl",
                destfile = "data/geo/2017.csv")
}
if(!file.exists("data/geo/2016.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY16_Geo_0.csv", 
                method = "libcurl",
                destfile = "data/geo/2016.csv")
}
if(!file.exists("data/geo/2015.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY15_Geo_0.csv", 
                method = "libcurl",
                destfile = "data/geo/2015.csv")
}
if(!file.exists("data/geo/2014.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY14_Geo_0.csv", 
                method = "libcurl",
                destfile = "data/geo/2014.csv")
}
if(!file.exists("data/geo/2013.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY13_Geo_0.csv", 
                method = "libcurl",
                destfile = "data/geo/2013.csv")
}
```

## Medicare Part D Prescribers - by Provider and Drug

We will attempt to download the datasets using the R code as above, but if that fails, we will use the bash code below.

### Attempting to use R

```{r}
if(!file.exists("data/2021.csv")){
  download.file("https://data.cms.gov/sites/default/files/2023-04/d75593b0-b2bf-4b98-869f-8be356ca7157/MUP_DPR_RY23_P04_V10_DY21_NPIBN.csv", 
                method = "libcurl",
                destfile = "data/2021.csv")
}
if(!file.exists("data/2020.csv")){
  download.file("https://data.cms.gov/sites/default/files/2022-07/f942c9b9-8ce7-4d06-9371-e57af6a49d3f/MUP_DPR_RY22_P04_V10_DY20_NPIBN_0.csv", 
                method = "libcurl",
                destfile = "data/2020.csv")
}
if(!file.exists("data/2019.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY19_NPIBN_1.csv", 
                method = "libcurl",
                destfile = "data/2019.csv")
}
if(!file.exists("data/2018.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY18_NPIBN_0.csv", 
                method = "libcurl",
                destfile = "data/2018.csv")
}
if(!file.exists("data/2017.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY17_NPIBN_1.csv", 
                method = "libcurl",
                destfile = "data/2017.csv")
}
if(!file.exists("data/2016.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY16_NPIBN_0.csv", 
                method = "libcurl",
                destfile = "data/2016.csv")
}
if(!file.exists("data/2015.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY15_NPIBN_1.csv", 
                method = "libcurl",
                destfile = "data/2015.csv")
}
if(!file.exists("data/2014.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY14_NPIBN_1.csv", 
                method = "libcurl",
                destfile = "data/2014.csv")
}
if(!file.exists("data/2013.csv")){
  download.file("https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY13_NPIBN_4.csv", 
                method = "libcurl",
                destfile = "data/2013.csv")
}

```

The above code terminates downloads prematurely at ~650 MB for each .csv file, thus we will use curl and bash:

### BASH:

```{bash, engine.path='/bin/bash'}
for url in "https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY13_NPIBN_4.csv" "https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY14_NPIBN_1.csv" "https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY15_NPIBN_1.csv" "https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY16_NPIBN_0.csv" "https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY17_NPIBN_1.csv" "https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY18_NPIBN_0.csv" "https://data.cms.gov/sites/default/files/2021-08/MUP_DPR_RY21_P04_V10_DY19_NPIBN_1.csv" "https://data.cms.gov/sites/default/files/2022-07/f942c9b9-8ce7-4d06-9371-e57af6a49d3f/MUP_DPR_RY22_P04_V10_DY20_NPIBN_0.csv" "https://data.cms.gov/sites/default/files/2023-04/d75593b0-b2bf-4b98-869f-8be356ca7157/MUP_DPR_RY23_P04_V10_DY21_NPIBN.csv" 
  do
      i=$((i+1))
      year=$((2012+$i))
      echo "URL: $url"
      if [[ -f data/$year.csv ]]
      then
        echo "The file $year.csv is already downloaded."
      else
        curl -X 'GET' $url -o data/$year.csv
      fi
  done
```

## Medicare Physician & Other Practitioners - by Provider and Service

```{bash, engine.path='/bin/bash'}
for url in "https://data.cms.gov/sites/default/files/2020-08/MUP_PHY_R19_P04_V10_D13_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2020-07/MUP_PHY_R19_P04_V10_D14_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2020-07/MUP_PHY_R19_P04_V10_D15_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2020-07/MUP_PHY_R19_P04_V10_D16_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2020-07/MUP_PHY_R19_P04_V10_D17_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2020-12/MUP_PHY_R20_P04_V10_D18_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2021-08/MUP_PHY_R21_P04_V10_D19_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2022-11/2260d1cc-9635-4c36-b890-61e672c3fea1/MUP_PHY_R22_P05_V10_D20_Prov_Svc.csv" "https://data.cms.gov/sites/default/files/2023-05/914a4463-7af3-423f-83a7-b343794e20ee/MUP_PHY_R23_P05_V10_D21_Prov_Svc.csv" 
  do
      i=$((i+1))
      year=$((2012+$i))
      echo "URL: $url"
      if [[ -f data/svc/$year.csv ]]
      then
        echo "The file $year.csv is already downloaded."
      else
        curl -X 'GET' $url -o data/svc/$year.csv
      fi
  done
```

# Write FST Files

## Medicare Part D Prescribers - by Provider and Drug

```{r}
for (year in 2013:2021) {
  # check if the fst file is already present
  if(!file.exists(paste0("data/", year, ".fst"))){
    # load the data:
    data_year <- read_csv(
      paste0("data/", year, ".csv"),
      show_col_types = FALSE,
      progress = FALSE
    )
    # write the data:
    write_fst(
      data_year, 
      paste0("data/", year, ".fst")
    )
  } else{
    print(paste0("data/", year, ".fst already serialized"))
  }
}
# cleanup
rm(year, data_year)
```

## Medicare Part D Prescribers - by Geography and Drug

```{r}
for (year in 2013:2021) {
  # check if the fst file is already present
  if(!file.exists(paste0("data/geo/", year, ".fst"))){
    # load the data:
    data_year <- read_csv(
      paste0("data/geo/", year, ".csv"),
      show_col_types = FALSE,
      progress = FALSE
    )
    # write the data:
    write_fst(
      data_year, 
      paste0("data/geo/", year, ".fst")
    )
  } else{
    print(paste0("data/geo/", year, ".fst already serialized"))
  }
}
# cleanup
rm(year, data_year)
```

## Medicare Physician & Other Practitioners - by Provider and Service

```{r}
for (year in 2013:2021) {
  # check if the fst file is already present
  if(!file.exists(paste0("data/svc/", year, ".fst"))){
    # load the data:
    data_year <- read_csv(
      paste0("data/svc/", year, ".csv"),
      show_col_types = FALSE,
      progress = FALSE
    )
    # write the data:
    write_fst(
      data_year, 
      paste0("data/svc/", year, ".fst")
    )
  } else{
    print(paste0("data/svc/", year, ".fst already serialized"))
  }
}
# cleanup
rm(year, data_year)
```

# Session Info

```{r}
sessionInfo()
```

```{bash, engine.path='/bin/bash'}
bash --version
```